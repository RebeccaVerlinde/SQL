#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data.

--Q1. How many orders were placed in January?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--Q2. How many of those orders were for an iPhone?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
AND product = 'iPhone';

--Q3. Select the customer account numbers for all the orders that were placed in February.
SELECT distinct customers.acctnum FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales
ON customers.order_id = FebSales.orderID
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--Q4. Which product was the cheapest one sold in January, and what was the price?
SELECT distinct Product, price
FROM BIT_DB.JanSales
GROUP BY Product, price
ORDER BY price ASC LIMIT 1;

--Q5. What is the total revenue for each product sold in January?
SELECT Product, SUM(quantity)*price as revenue FROM BIT_DB.JanSales
GROUP BY Product;

--Q6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, Quantity, SUM(Quantity)*price as revenue FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101';

--Q7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers?
SELECT
COUNT(distinct cust.acctnum),
avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE FEB.Quantity>2
AND length(orderid) = 6
AND orderid <> 'Order ID';

--Q8. Different ways of filtering data by date.
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35';

SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%';

--Q9. Use of LIKE and % to search in database.
SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%';

SELECT distinct Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99';

--Q10. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(quantity) 
FROM BIT_DB.FebSales
WHERE location like '%los angeles%'
GROUP BY Product;

--Q11.Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT distinct location, count(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE "%NY%"
AND length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY location
Having COUNT(orderID) >= 3;

--Q12.How many of each type of headphone were sold in February?
SELECT Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE Product LIKE '%headphone%'
AND length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY Product;

--Q13.What was the average amount spent per account in February?
SELECT (SUM(Quantity)*price)/COUNT(cust.acctnum)
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
ON feb.orderID = cust.order_id
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--Q14.What was the average quantity of products purchased per account in February?
SELECT SUM(Quantity)/COUNT(cust.acctnum)
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
ON feb.orderID = cust.order_id
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--Q15.Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT Product, SUM(Quantity*price)
FROM BIT_DB.JanSales jan
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY Product
ORDER BY SUM(Quantity*price) DESC
LIMIT 1;
